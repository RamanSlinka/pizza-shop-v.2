{"version":3,"sources":["assets/img/pizza-logo.svg","components/Button.tsx","components/Header.tsx","components/Categories.tsx","components/SortPopup.tsx","components/pizzaBlock/PizzaBlock.tsx","store/actions/pizzas.ts","components/pizzaBlock/PizzaLoadingBlock.tsx","pages/Home.tsx","store/actions/filters.ts","store/actions/cart.ts","pages/CartItem.tsx","pages/Cart.tsx","App.tsx","reportWebVitals.ts","store/reducers/filters.ts","store/reducers/pizzas.ts","store/reducers/cart.ts","store/index.ts","index.tsx"],"names":["Button","className","outline","children","onClick","classNames","Header","useSelector","store","totalPrice","cart","totalCount","to","width","src","logo","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","React","memo","items","activeCategory","onClickItem","map","name","index","SortPopup","itemsSort","activeSortType","onClickSortPopup","useState","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","obj","type","handleOutsideClick","e","path","includes","current","useEffect","document","body","addEventListener","ref","PizzaBlock","id","imageUrl","price","types","sizes","onClickAddPizza","addedCount","activeType","setActiveType","activeSize","setActiveSize","availableTypes","availableSizes","active","disabled","onSelectType","size","onSelectSize","setLoaded","payload","PizzaLoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","itemsCategories","Home","pizzas","isLoaded","filters","category","sortBy","cartItems","itemsCart","dispatch","useDispatch","axios","get","then","data","fetchPizzas","onSelectCategory","useCallback","setCategory","onSelectSortType","handleAddPizzaToCart","order","item","length","Array","_","CartItem","totalAddedPizzas","console","log","Cart","addedPizzas","Object","keys","key","href","App","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","state","action","newItems","allPizzas","concat","apply","values","reduce","sum","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"8LAAe,G,MAAA,IAA0B,wC,wBCyB1BA,EAdS,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACpD,OACI,8BACI,wBACIA,QAASA,EACTH,UAAWI,IAAW,SAAUJ,EAAU,CAC1C,kBAAoBC,IAHxB,SAKKC,O,gBCsDFG,EAlEI,WAAO,IAAD,EAEYC,aAAY,SAACC,GAAD,MAAgB,CACzDC,WAAYD,EAAME,KAAKD,WACvBE,WAAYH,EAAME,KAAKC,eAFpBF,EAFc,EAEdA,WAAYE,EAFE,EAEFA,WAMnB,OACI,qBAAKV,UAAU,SAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAAC,IAAD,CAASW,GAAI,IAAb,SACA,qBAAKC,MAAM,KAAKC,IAAKC,EAAMC,IAAI,iBAE/B,gCACI,6CACA,mNAGR,qBAAKf,UAAU,eAAf,SACI,cAAC,IAAD,CAASW,GAAI,QAAb,SACA,eAAC,EAAD,CAAQX,UAAU,eAAlB,UAEQ,iCAAOQ,EAAP,aACA,qBAAKR,UAAU,sBACf,sBACIY,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,sBACIC,EAAE,wLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,yLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,sWACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,aAGvB,+BAAOd,iB,OCvBpBe,EA9B6BC,IAAMC,MAAK,YAIQ,IAHHC,EAGE,EAHFA,MACAC,EAEE,EAFFA,eACAC,EACE,EADFA,YAMxD,OACI,qBAAK9B,UAAU,aAAf,SACI,+BACI,oBAAIA,UAA8B,OAAnB6B,EAA0B,SAAW,GAChD1B,QAAS,kBAAM2B,EAAY,OAD/B,iBAKCF,GAASA,EAAMG,KAAI,SAACC,EAAMC,GAAP,OAChB,oBACIjC,UAAY6B,IAAmBI,EAAQ,SAAW,GAClD9B,QAAS,kBAAM2B,EAAYG,IAF/B,SAIED,GADOC,c,QC4CdC,EAlE2BR,IAAMC,MAAK,YAAqD,IAAD,EAAlDQ,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBAAuB,EAE7DC,oBAAS,GAFoD,mBAE9FC,EAF8F,KAEhFC,EAFgF,KAI/FC,EAAUC,mBAaVC,EAAW,OAAGR,QAAH,IAAGA,GAAH,UAAGA,EAAWS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAASV,YAAvC,aAAG,EAAqDJ,KAEnEe,EAAqB,SAACC,GACnBA,EAAEC,KAAKC,SAAST,EAAQU,UACzBX,GAAgB,IAOxB,OAJAY,qBAAU,WACNC,SAASC,KAAKC,iBAAiB,QAASR,KACzC,CAACR,IAGA,sBAAKiB,IAAKf,EACLzC,UAAU,OADf,UAEI,sBAAKA,UAAU,cAAf,UACI,qBACIA,UAAWuC,EAAe,UAAY,GACtC3B,MAAM,KACNI,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BANV,SAQI,sBACIC,EAAE,4WACFF,KAAK,cAGb,2GACA,sBAAMf,QAxCS,WACvBqC,GAAiBD,IAuCT,SAAoCI,OAEvCJ,GACD,qBAAKvC,UAAU,cAAf,SACI,6BACKmC,GAAaA,EAAUJ,KAAI,SAACc,EAAKZ,GAAN,OACxB,oBACIjC,UAAWoC,IAAmBS,EAAIC,KAAO,SAAW,GAEpD3C,QAAS,kBA7CX2C,EA6C8BD,EAAIC,KA5ChDT,GACAA,EAAiBS,QAGrBN,GAAgB,GALC,IAACM,GA0CF,SAIED,EAAIb,MAFGC,gBCoDlBwB,EAlG6B,SAAC,GAOO,IANHC,EAME,EANFA,GAAI1B,EAMF,EANEA,KAAM2B,EAMR,EANQA,SACVC,EAKE,EALFA,MACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,gBACDC,EACG,EADHA,WACG,EAEX1B,mBAASuB,EAAM,IAFJ,mBAExCI,EAFwC,KAE5BC,EAF4B,OAGX5B,mBAAS,GAHE,mBAGxC6B,EAHwC,KAG5BC,EAH4B,KAKzCC,EAAiB,CAAC,uCAAU,4EAC5BC,EAAiB,CAAC,GAAI,GAAI,IAoBhC,OAGI,sBAAKtE,UAAU,cAAf,UACI,qBACIA,UAAU,qBACVa,IAAK8C,EACL5C,IAAI,UAER,oBAAIf,UAAU,qBAAd,SAAoCgC,IACpC,sBAAKhC,UAAU,wBAAf,UACI,6BACKqE,EAAetC,KAAI,SAACe,EAAcb,GAAf,OAChB,oBAEIjC,UAAWI,IAAW,CAClBmE,OAAQN,IAAehC,EACvBuC,UAAWX,EAAMX,SAASjB,KAG9B9B,QAAS,kBArCZ,SAAC8B,GAClBiC,EAAcjC,GAoCqBwC,CAAaxC,IAPhC,SAQEa,GAPOA,QAWjB,6BACKwB,EAAevC,KAAI,SAAC2C,EAAczC,GAAf,OAChB,qBAEIjC,UAAWI,IAAW,CAClBmE,OAAQJ,IAAelC,EACvBuC,UAAWV,EAAMZ,SAASwB,KAG9BvE,QAAS,kBAhDZ,SAAC8B,GAClBmC,EAAcnC,GA+CqB0C,CAAa1C,IAPhC,UAQEyC,EARF,SACSA,WAWrB,sBAAK1E,UAAU,sBAAf,UACI,sBAAKA,UAAU,qBAAf,0BAAwC4D,EAAxC,aACA,eAAC,EAAD,CACIzD,QApDG,WACf,IAAM0C,EAAM,CACRa,KAAI1B,OAAM2B,WAAUC,QACpBc,KAAMJ,EAAeH,GACrBrB,KAAMuB,EAAeJ,IAGzBF,EAAgBlB,IA8CJ7C,UAAU,cAAcC,SAAO,EAFnC,UAGI,qBACIW,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,2QACFF,KAAK,YAGb,oFACC8C,GAAc,4BAAIA,c,iBCjF1BY,EAAY,SAACC,GAAD,MAAuB,CAC5C/B,KAAM,aACN+B,Y,QCDWC,EAvBW,WAGtB,OACI,eAAC,IAAD,CACI9E,UAAU,cACV+E,MAAO,EACPnE,MAAO,IACPI,OAAQ,IACRC,QAAQ,cACR+D,gBAAgB,UAChBC,gBAAgB,UAPpB,UAUI,wBAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAC5B,sBAAMC,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAI5E,MAAM,MAAMI,OAAO,OACrD,sBAAMqE,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAI5E,MAAM,MAAMI,OAAO,OACrD,sBAAMqE,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAI5E,MAAM,KAAKI,OAAO,OACpD,sBAAMqE,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAK5E,MAAM,MAAMI,OAAO,WCR/DyE,EAAkB,CAAC,uCAAU,uFAAkB,iCAAS,uCAAU,mDAAY,kCAoFrEC,EAhFEhE,IAAMC,MAAK,WAGxB,IAAMC,EAAQtB,aAAY,SAACC,GAAD,OACtBA,EAAMoF,OAAO/D,SAEXgE,EAAWtF,aAA8B,SAACC,GAAD,OAC3CA,EAAMoF,OAAOC,YAPa,EAQHtF,aAAY,SAACC,GAAD,OACnCA,EAAMsF,WADHC,EARuB,EAQvBA,SAAUC,EARa,EAQbA,OAGXC,EAAY1F,aAAY,SAACC,GAAD,OAC1BA,EAAME,KAAKwF,aAITC,EAAWC,cAEjB/C,qBAAU,WACN8C,EFAmB,SAACH,EAAgBD,GAAjB,OAAkD,SAACI,GAC1EA,EAAStB,GAAU,IACnBwB,IAAMC,IAAN,uCAAuD,OAAbP,EAAA,mBAAgCA,GAAa,GAAvF,kBACUC,EADV,iBAGKO,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACJL,EAZsC,CAC9CpD,KAAM,aACN+B,QAU6B0B,IACrBL,EAAStB,GAAU,QEPd4B,CAAYT,EAAQD,MAC9B,CAACA,EAAUC,IAGd,IAAMU,EAAmBC,uBAAY,SAACzE,GAClCiE,EC1BmB,SAACJ,GAAD,MAA+B,CACtDhD,KAAM,eACN+B,QAASiB,GDwBIa,CAAY1E,MACtB,IAEG2E,EAAmBF,uBAAY,SAAC5D,GAClCoD,ECnCoC,CACxCpD,KAAM,cACN+B,QDiCuB/B,MACpB,IAEG+D,EAAuB,SAAChE,GAC3BqD,EE1CoD,CACvDpD,KAAM,iBACN+B,QFwC2BhC,KAG3B,OAEI,sBAAK7C,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UAEI,cAAC,EAAD,CACI6B,eAAgBiE,EAChBlE,MAAO6D,EACP3D,YAAa2E,IAGjB,cAAC,EAAD,CACIpE,iBAAkBuE,EAClBxE,eAAgB2D,EAChB5D,UAAW,CACP,CAACH,KAAM,2EAAgBc,KAAM,UAAWgE,MAAO,QAC/C,CAAC9E,KAAM,2BAAQc,KAAM,QAASgE,MAAO,QACrC,CAAC9E,KAAM,mDAAYc,KAAM,OAAQgE,MAAO,aAMpD,oBAAI9G,UAAU,iBAAd,+DACA,qBAAKA,UAAU,iBAAf,SACK4F,EACKhE,EAAMG,KAAI,SAACgF,GAAD,OAER,cAAC,EAAD,aACIhD,gBAAiB8C,EAClB7C,WAAagC,EAAUe,EAAKrD,KAAOsC,EAAUe,EAAKrD,IAAIsD,QAEjDD,GADCA,EAAKrD,OAGhBuD,MAAM,IAAI/F,KAAK,GAAGa,KAAI,SAACmF,EAAGjF,GAAJ,OACpB,cAAC,EAAD,GAAwBA,cGVjCkF,EAnEoB,SAAC,GAC0C,IADxCnF,EACuC,EADvCA,KAAMc,EACiC,EADjCA,KACJ4B,EAAqC,EAArCA,KAAKf,EAAgC,EAAhCA,SAAUyD,EAAsB,EAAtBA,iBAGnD,OADAC,QAAQC,IAAIF,GAGJ,sBAAKpH,UAAU,aAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBACIA,UAAU,qBACVa,IAAK8C,EACL5C,IAAI,YAGZ,sBAAKf,UAAU,kBAAf,UACI,6BAAKgC,IACL,8BAAIc,EAAJ,oCAAkB4B,EAAlB,uBAEJ,sBAAK1E,UAAU,mBAAf,UACI,qBAAKA,UAAU,+DAAf,SACI,sBAAKY,MAAM,KAAKI,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAChDC,MAAM,6BADX,UAEI,sBACIC,EAAE,qNACFF,KAAK,YACT,sBACIE,EAAE,gUACFF,KAAK,iBAIjB,4BAAIkG,IACJ,qBAAKpH,UAAU,8DAAf,SACI,sBAAKY,MAAM,KAAKI,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAChDC,MAAM,6BADX,UAEI,sBACIC,EAAE,qNACFF,KAAK,YACT,sBACIE,EAAE,gUACFF,KAAK,oBAKrB,qBAAKlB,UAAU,mBAAf,SACI,6CAEJ,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,wCAAf,SACI,sBAAKY,MAAM,KAAKI,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAChDC,MAAM,6BADX,UAEI,sBACIC,EAAE,qNACFF,KAAK,YACT,sBACIE,EAAE,gUACFF,KAAK,uBCiCtBqG,EAhGE,WAAO,IAAD,EAEqBjH,aAAY,SAACC,GAAD,MAAiB,CACjEqB,MAAOrB,EAAME,KAAKwF,UAClBzF,WAAYD,EAAME,KAAKD,WACvBE,WAAYH,EAAME,KAAKC,eAHpBF,EAFY,EAEZA,WAAYE,EAFA,EAEAA,WAAYkB,EAFZ,EAEYA,MAK/ByF,QAAQC,IAAI1F,GAGZ,IAAM4F,EAAcC,OAAOC,KAAK9F,GAAOG,KAAI,SAAA4F,GACvC,OAAO/F,EAAM+F,GAAK,MAQtB,OACI,qBAAK3H,UAAU,UAAf,SACI,qBAAKA,UAAU,4BAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,iBAAd,UACI,sBAAKY,MAAM,KAAKI,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAChDC,MAAM,6BADX,UAEI,sBACIC,EAAE,wLACFC,OAAO,QAAQC,YAAY,MAAMC,cAAc,QAAQC,eAAe,UAC1E,sBACIJ,EAAE,yLACFC,OAAO,QAAQC,YAAY,MAAMC,cAAc,QAAQC,eAAe,UAC1E,sBACIJ,EAAE,sWACFC,OAAO,QAAQC,YAAY,MAAMC,cAAc,QAAQC,eAAe,aAXlF,gDAeA,sBAAKxB,UAAU,cAAf,UACI,sBAAKY,MAAM,KAAKI,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAChDC,MAAM,6BADX,UAEI,sBAAMC,EAAE,sBAAsBC,OAAO,UAAUC,YAAY,MAAMC,cAAc,QACzEC,eAAe,UACrB,sBACIJ,EAAE,4dACFC,OAAO,UAAUC,YAAY,MAAMC,cAAc,QAAQC,eAAe,UAC5E,sBAAMJ,EAAE,2BAA2BC,OAAO,UAAUC,YAAY,MAC1DC,cAAc,QAAQC,eAAe,UAC3C,sBAAMJ,EAAE,2BAA2BC,OAAO,UAAUC,YAAY,MAC1DC,cAAc,QAAQC,eAAe,aAG/C,qIAGR,qBAAKxB,UAAU,iBAAf,SAEKwH,EAAYzF,KAAI,SAACc,GAAD,OAEb,cAAC,EAAD,CACIuE,iBAAkBI,EAAYR,OAC9BrD,SAAUd,EAAIc,SACd3B,KAAMa,EAAIb,KAAMc,KAAMD,EAAIC,KAC1B4B,KAAM7B,EAAI6B,YAMtB,sBAAK1E,UAAU,eAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,8FAAmB,8BAAIU,EAAJ,oBAAnB,OACA,0GAAqB,8BAAIF,EAAJ,aAArB,UAEJ,sBAAKR,UAAU,uBAAf,UACI,oBAAG4H,KAAK,IAAI5H,UAAU,iDAAtB,UACI,qBAAKY,MAAM,IAAII,OAAO,KAAKC,QAAQ,WAAWC,KAAK,OAC9CC,MAAM,6BADX,SAEI,sBAAMC,EAAE,4BAA4BC,OAAO,UAAUC,YAAY,MAC3DC,cAAc,QAAQC,eAAe,YAG/C,4HAEJ,qBAAKxB,UAAU,iBAAf,SACI,yI,OClEjB6H,EAjBA,WAEX,OAEI,sBAAK7H,UAAU,UAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACI,cAAC,IAAD,CAAOiD,KAAM,IAAK6E,UAAWpC,EAAMqC,OAAK,IACxC,cAAC,IAAD,CAAO9E,KAAM,QAAS6E,UAAWP,EAAMQ,OAAK,WCD7CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCDRO,EAAiC,CACnC1C,SAAU,KACVC,OAAQ,WCHZ,IAAMyC,EAAiC,CACnC5G,MAAO,GACPgE,UAAU,G,oBCMR4C,EAAiC,CACnCvC,UAAW,GACXzF,WAAY,EACZE,WAAY,G,YCTV+H,EAAcC,YAAgB,CAChC7C,QHGW,WAA2G,IAAxF8C,EAAuF,uDAA7DH,EAAcI,EAA+C,uCACrH,OAAQA,EAAO9F,MACX,IAAM,cACN,OAAO,2BACA6F,GADP,IACc5C,OAAQ6C,EAAO/D,UAE7B,IAAO,eACP,OAAO,2BACA8D,GADP,IACc7C,SAAU8C,EAAO/D,UAInC,OAAO8D,GGfEhD,OFEE,WAAsG,IAAtFgD,EAAqF,uDAA3DH,EAAcI,EAA6C,uCAChH,OAAQA,EAAO9F,MACX,IAAM,aACF,OAAO,2BACA6F,GADP,IACc/G,MAAOgH,EAAO/D,QACxBe,UAAU,IAEd,IAAM,aACN,OAAO,2BACA+C,GADP,IACc/C,SAAUgD,EAAO/D,UAGnC,QACI,OAAO8D,IEfElI,KDaN,WAA2G,IAA7FkI,EAA4F,uDAAlEH,EAAcI,EAAoD,uCACrH,OAAQA,EAAO9F,MACX,IAAM,iBACF,IAAM+F,EAAQ,2BACHF,EAAM1C,WADH,kBAEL2C,EAAO/D,QAAQnB,GAAOiF,EAAM1C,UAAU2C,EAAO/D,QAAQnB,IAAhC,sBAEZiF,EAAM1C,UAAU2C,EAAO/D,QAAQnB,KAFnB,CAEwBkF,EAAO/D,UAD/C,CAAC+D,EAAO/D,WAIhBiE,EAAY,GAAGC,OAAOC,MAAM,GAAIvB,OAAOwB,OAAOJ,IAE9CrI,EAAasI,EAAUI,QAAO,SAACC,EAAatG,GAC9C,OAAQA,EAAIe,MAAQuF,IACrB,GAEH,OAAO,2BACAR,GADP,IAEI1C,UAAW4C,EACXnI,WAAYoI,EAAU9B,OACtBxG,WAAYA,IAGpB,QACI,OAAOmI,MClCNpI,EAAQ6I,YAAYX,EAAaY,YAAgBC,MCL9DC,IAASC,OACL,cAAC,IAAD,CAAUjJ,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,QAIR8C,SAASoG,eAAe,SAI5BzB,M","file":"static/js/main.c638676e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React, {FC} from 'react';\nimport classNames from \"classnames\";\n\n// type ButtonPropsType = {\n//     className: any\n//     outline:string\n//     children: React.ComponentType\n//     onClick: () => void\n// }\n\n\nconst Button: FC <any>= ({className, outline, children, onClick }) => {\n    return (\n        <div>\n            <button\n                onClick={onClick}\n                className={classNames('button', className,{\n                'button--outline' : outline,\n            })}>\n                {children}\n            </button>\n        </div>\n    );\n};\n\nexport default Button;","import React, {FC} from 'react';\nimport logo from \"../assets/img/pizza-logo.svg\";\nimport Button from './Button';\nimport * as path from \"path\";\nimport {NavLink} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst Header: FC = () => {\n\n    const {totalPrice, totalCount} = useSelector((store:any) => ({\n        totalPrice: store.cart.totalPrice,\n        totalCount: store.cart.totalCount\n    }))\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"container\">\n                <div className=\"header__logo\">\n                    <NavLink to={'/'}>\n                    <img width=\"38\" src={logo} alt=\"Pizza logo\"/>\n                    </NavLink>\n                    <div>\n                        <h1> Pizza Shop</h1>\n                        <p>самая вкусная пицца во вселенной</p>\n                    </div>\n                </div>\n                <div className=\"header__cart\">\n                    <NavLink to={'/cart'}>\n                    <Button className=\"button--cart\" >\n\n                            <span>{totalPrice} ₽</span>\n                            <div className=\"button__delimiter\"></div>\n                            <svg\n                                width=\"18\"\n                                height=\"18\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n                            <span>{totalCount}</span>\n\n                    </Button>\n                    </NavLink>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React, {FC} from 'react';\n\ntype CategoriesPropsType = {\n    items:  string []\n    onClickItem: (index: number | null) => void\n    activeCategory: number\n}\n\n\nconst Categories: FC<CategoriesPropsType> = React.memo(({\n                                                            items,\n                                                            activeCategory,\n                                                            onClickItem\n                                                        }) => {\n    // const onSelectItem = (index: number | null) => {\n    //     onClickItem(index )\n    // }\n\n    return (\n        <div className=\"categories\">\n            <ul>\n                <li className={activeCategory === null ? \"active\" : \"\"}\n                    onClick={() => onClickItem(null)}\n                >\n                    All\n                </li>\n                {items && items.map((name, index) =>\n                    <li\n                        className={ activeCategory === index ? \"active\" : \"\"}\n                        onClick={() => onClickItem(index)}\n                        key={index}\n                    >{name}\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n});\n\nexport default Categories;","import React, {FC, useEffect, useRef, useState} from 'react';\n\ntype SortPopupPropsType = {\n    itemsSort: Array<{ name: string, type: string, order: string }>\n    onClickSortPopup: (type: any) => void\n    activeSortType: string\n}\n\nconst SortPopup: FC<SortPopupPropsType> = React.memo(({itemsSort, activeSortType, onClickSortPopup,}) => {\n\n    const [visiblePopup, setVisiblePopup] = useState(false);\n\n    const sortRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n\n    const toggleVisiblePopup = () => {\n        setVisiblePopup(!visiblePopup)\n    }\n\n    const onSelectItem = (type: any) => {\n        if (onClickSortPopup) {\n            onClickSortPopup(type);\n        }\n\n        setVisiblePopup(false);\n    }\n    const activeLabel = itemsSort?.find(obj => obj.type === activeSortType)?.name;\n\n    const handleOutsideClick = (e: any) => {\n        if (!e.path.includes(sortRef.current)) {\n            setVisiblePopup(false)\n        }\n    }\n    useEffect(() => {\n        document.body.addEventListener('click', handleOutsideClick)\n    }, [visiblePopup])\n\n    return (\n        <div ref={sortRef}\n             className=\"sort\">\n            <div className=\"sort__label\">\n                <svg\n                    className={visiblePopup ? 'rotated' : ''}\n                    width=\"10\"\n                    height=\"6\"\n                    viewBox=\"0 0 10 6\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                        fill=\"#2C2C2C\"\n                    />\n                </svg>\n                <b>Сортировка по:</b>\n                <span onClick={toggleVisiblePopup}>{activeLabel}</span>\n            </div>\n            {visiblePopup &&\n            <div className=\"sort__popup\">\n                <ul>\n                    {itemsSort && itemsSort.map((obj, index) =>\n                        <li\n                            className={activeSortType === obj.type ? \"active\" : \"\"}\n                            key={index}\n                            onClick={() => onSelectItem(obj.type)}\n                        >{obj.name}</li>)}\n\n                </ul>\n            </div>\n            }\n\n        </div>\n    );\n});\n\nexport default SortPopup;","import React, {FC, useState} from 'react';\nimport classNames from \"classnames\";\nimport Button from \"../Button\";\nimport {itemType} from \"../../store/actions/pizzas\";\n\ntype PizzaBlockPropsType = {\n    id: number\n    name: string\n    imageUrl: string\n    price: number\n    types: Array<number>\n    sizes: Array<number>\n    onClickAddPizza: (obj: any) => void\n    addedCount: any\n}\n\nconst PizzaBlock: FC<PizzaBlockPropsType> = ({\n                                                 id, name, imageUrl,\n                                                 price,\n                                                 types,\n                                                 sizes,\n                                                 onClickAddPizza,\n                                                addedCount\n                                             }) => {\n\n    const [activeType, setActiveType] = useState(types[0]);\n    const [activeSize, setActiveSize] = useState(0);\n\n    const availableTypes = [\"тонкое\", \"традиционное\"];\n    const availableSizes = [26, 30, 40];\n\n\n    const onSelectType = (index: number) => {\n        setActiveType(index)\n    };\n    const onSelectSize = (index: number) => {\n        setActiveSize(index)\n    }\n\n    const onAddPizza = () => {\n        const obj = {\n            id, name, imageUrl, price,\n            size: availableSizes[activeSize],\n            type: availableTypes[activeType]\n        }\n\n        onClickAddPizza(obj)\n    }\n\n    return (\n\n\n        <div className=\"pizza-block\">\n            <img\n                className=\"pizza-block__image\"\n                src={imageUrl}\n                alt=\"Pizza\"\n            />\n            <h4 className=\"pizza-block__title\">{name}</h4>\n            <div className=\"pizza-block__selector\">\n                <ul>\n                    {availableTypes.map((type: string, index) => (\n                        <li\n                            key={type}\n                            className={classNames({\n                                active: activeType === index,\n                                disabled: !types.includes(index)\n\n                            })}\n                            onClick={() => onSelectType(index)}\n                        >{type}</li>\n                    ))}\n\n                </ul>\n                <ul>\n                    {availableSizes.map((size: number, index) => (\n                        <li\n                            key={size}\n                            className={classNames({\n                                active: activeSize === index,\n                                disabled: !sizes.includes(size)\n\n                            })}\n                            onClick={() => onSelectSize(index)}\n                        >{size} cm.</li>\n                    ))}\n                </ul>\n            </div>\n            <div className=\"pizza-block__bottom\">\n                <div className=\"pizza-block__price\">от {price} ₽</div>\n                <Button\n                    onClick={onAddPizza}\n                    className=\"button--add\" outline>\n                    <svg\n                        width=\"12\"\n                        height=\"12\"\n                        viewBox=\"0 0 12 12\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                            fill=\"white\"\n                        />\n                    </svg>\n                    <span>Добавить</span>\n                    {addedCount && <i>{addedCount}</i>}\n\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default PizzaBlock;","import axios from \"axios\";\nimport {AppThunkType} from \"../index\";\n\n\nexport type itemType = {\n    id: number\n    imageUrl: string\n    name: string\n    types: Array<number>\n    sizes: Array<number>\n    price: number\n    category: number\n    rating: number\n\n}\n\nexport type itemsType = {\n    items: Array<itemType>\n}\n\nexport type SetPizzasActionType = ReturnType<typeof setPizzasAC>\nexport type SetLoadedActionType = ReturnType<typeof setLoaded>\n\nexport type PizzasActionsType = SetPizzasActionType | SetLoadedActionType\n\nexport const setLoaded = (payload: boolean) => ({\n    type: 'SET_LOADED',\n    payload\n} as const);\n\nexport const setPizzasAC = (items: itemsType) => ({\n    type: 'SET_PIZZAS',\n    payload: items\n} as const);\n\n\nexport const fetchPizzas = (sortBy: string, category: any ): AppThunkType => (dispatch) => {\n    dispatch(setLoaded(false));\n    axios.get(`http://localhost:3001/pizzas?${category !== null ? `category=${category}` : \"\"\n    }&_sort=${sortBy}&_order=desc`,\n        )\n        .then(({data}) => {\n            dispatch(setPizzasAC(data));\n            dispatch(setLoaded(true));\n        })\n\n}","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst PizzaLoadingBlock = () => {\r\n\r\n\r\n    return (\r\n        <ContentLoader\r\n            className=\"pizza-block\"\r\n            speed={2}\r\n            width={280}\r\n            height={460}\r\n            viewBox=\"0 0 280 460\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\"\r\n\r\n        >\r\n            <circle cx=\"132\" cy=\"142\" r=\"115\" />\r\n            <rect x=\"0\" y=\"274\" rx=\"6\" ry=\"6\" width=\"280\" height=\"23\" />\r\n            <rect x=\"0\" y=\"311\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n            <rect x=\"0\" y=\"418\" rx=\"6\" ry=\"6\" width=\"93\" height=\"31\" />\r\n            <rect x=\"137\" y=\"409\" rx=\"25\" ry=\"25\" width=\"140\" height=\"46\" />\r\n        </ContentLoader>\r\n    )\r\n};\r\n\r\nexport default PizzaLoadingBlock;","import React, {FC, useCallback, useEffect} from 'react';\nimport Categories from \"../components/Categories\";\nimport SortPopup from \"../components/SortPopup\";\nimport PizzaBlock from \"../components/pizzaBlock/PizzaBlock\";\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\nimport {setCategory, setSortBy} from \"../store/actions/filters\";\nimport {fetchPizzas, itemType} from \"../store/actions/pizzas\";\nimport PizzaLoadingBlock from \"../components/pizzaBlock/PizzaLoadingBlock\";\nimport {AppRootStateType} from \"../store\";\nimport {addPizzaToCart} from \"../store/actions/cart\";\nimport {newItemsType} from \"../store/reducers/cart\";\n\n\nconst itemsCategories = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые', 'Смесь']\n\n\n\nconst Home: FC = React.memo(() => {\n\n\n    const items = useSelector((store: any) =>\n        store.pizzas.items)\n\n    const isLoaded = useSelector<AppRootStateType>((store) =>\n        store.pizzas.isLoaded)\n    const {category, sortBy} = useSelector((store: any) =>\n        store.filters)\n\n    const cartItems = useSelector((store: any) =>\n        store.cart.itemsCart)\n\n  //  console.log(cartItems)\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchPizzas(sortBy, category))\n    }, [category, sortBy,]);\n\n\n    const onSelectCategory = useCallback((index: number | null) => {\n        dispatch(setCategory(index))\n    }, []);\n\n    const onSelectSortType = useCallback((type: string) => {\n        dispatch(setSortBy(type))\n    }, [])\n\n    const handleAddPizzaToCart = (obj: newItemsType) => {\n       dispatch(addPizzaToCart(obj))\n    }\n\n    return (\n\n        <div className=\"container\">\n            <div className=\"content__top\">\n\n                <Categories\n                    activeCategory={category}\n                    items={itemsCategories}\n                    onClickItem={onSelectCategory}\n                />\n\n                <SortPopup\n                    onClickSortPopup={onSelectSortType}\n                    activeSortType={sortBy}\n                    itemsSort={[\n                        {name: 'популярности', type: 'popular', order: 'desc'},\n                        {name: 'цене', type: 'price', order: 'desc'},\n                        {name: 'алфавиту', type: 'name', order: 'asc'}\n                    ]}\n                />\n\n\n            </div>\n            <h2 className=\"content__title\">Все пиццы</h2>\n            <div className=\"content__items\">\n                {isLoaded\n                    ? items.map((item: itemType) =>\n\n                        <PizzaBlock\n                            onClickAddPizza={handleAddPizzaToCart}\n                           addedCount={ cartItems[item.id] && cartItems[item.id].length}\n                            key={item.id}\n                            {...item}  />)\n\n                    : Array(12).fill(0).map((_, index: number) =>\n                        <PizzaLoadingBlock key={index}/>)}\n\n\n            </div>\n        </div>\n\n\n    )\n});\n\nexport default Home;","\n\n\nexport type SetSortByActionType = ReturnType<typeof setSortBy>\nexport type SetCategoryActionType = ReturnType<typeof setCategory>\n\nexport type FiltersActionsType = SetSortByActionType\n    // | SetCategoryActionType;\n\n\nexport const setSortBy = (name: string) => ({\n    type: 'SET_SORT_BY',\n    payload: name\n});\n\nexport const setCategory = (category: number | null ) => ({\n    type: 'SET_CATEGORY',\n    payload: category\n});","\r\nimport {newItemsType} from \"../reducers/cart\";\r\n\r\nexport type AddPizzaToCartActionType = ReturnType<typeof addPizzaToCart>\r\n\r\n\r\n\r\nexport const addPizzaToCart = (pizzaObj: newItemsType) => ({\r\n    type: 'ADD_PIZZA_CART',\r\n    payload: pizzaObj } as const )","import React, {FC} from 'react';\r\n\r\ntype CartItemType = {\r\n    name: string\r\n    type: string\r\n    size: number\r\n    imageUrl: string\r\n    totalAddedPizzas: number\r\n}\r\n\r\nconst CartItem: FC<CartItemType> = ({ name, type,\r\n                                        size,imageUrl, totalAddedPizzas}) => {\r\n\r\n    console.log(totalAddedPizzas)\r\n    return (\r\n\r\n            <div className=\"cart__item\">\r\n                <div className=\"cart__item-img\">\r\n                    <img\r\n                        className=\"pizza-block__image\"\r\n                        src={imageUrl}\r\n                        alt=\"Pizza\"\r\n                    />\r\n                </div>\r\n                <div className=\"cart__item-info\">\r\n                    <h3>{name}</h3>\r\n                    <p>{type} тесто, {size} см.</p>\r\n                </div>\r\n                <div className=\"cart__item-count\">\r\n                    <div className=\"button button--outline button--circle cart__item-count-minus\">\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                    <b>{totalAddedPizzas}</b>\r\n                    <div className=\"button button--outline button--circle cart__item-count-plus\">\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"cart__item-price\">\r\n                    <b>770 ₽</b>\r\n                </div>\r\n                <div className=\"cart__item-remove\">\r\n                    <div className=\"button button--outline button--circle\">\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CartItem;","import React, {FC} from 'react';\nimport CartItem from \"./CartItem\";\nimport {useSelector} from \"react-redux\";\n\nconst Cart: FC = () => {\n\n    const {totalPrice, totalCount, items} = useSelector((store: any) => ({\n        items: store.cart.itemsCart,\n        totalPrice: store.cart.totalPrice,\n        totalCount: store.cart.totalCount\n    }))\n    console.log(items)\n    // console.log(items[0][0].name)\n\n    const addedPizzas = Object.keys(items).map(key => {\n        return items[key][0];\n    })\n    // const totalAddedPizzas = Object.keys(items).map(key => {\n    //     return items[key].length;\n    // })\n\n    //const totalAddedPizzas2 = items.length\n   // console.log(totalAddedPizzas)\n    return (\n        <div className=\"content\">\n            <div className=\"container container--cart\">\n                <div className=\"cart\">\n                    <div className=\"cart__top\">\n                        <h2 className=\"content__title\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                                <path\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                                <path\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                            </svg>\n                            Корзина\n                        </h2>\n                        <div className=\"cart__clear\">\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\n                                      strokeLinejoin=\"round\"/>\n                                <path\n                                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\n                                    stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                                <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\n                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                                <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\n                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                            </svg>\n\n                            <span>Очистить корзину</span>\n                        </div>\n                    </div>\n                    <div className=\"content__items\">\n\n                        {addedPizzas.map((obj: any) => (\n\n                            <CartItem\n                                totalAddedPizzas={addedPizzas.length}\n                                imageUrl={obj.imageUrl}\n                                name={obj.name} type={obj.type}\n                                size={obj.size}/>\n                        ))}\n\n\n\n                    </div>\n                    <div className=\"cart__bottom\">\n                        <div className=\"cart__bottom-details\">\n                            <span> Всего пицц: <b>{totalCount} шт.</b> </span>\n                            <span> Сумма заказа: <b>{totalPrice} ₽</b> </span>\n                        </div>\n                        <div className=\"cart__bottom-buttons\">\n                            <a href=\"/\" className=\"button button--outline button--add go-back-btn\">\n                                <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\n                                     xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\n                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                                </svg>\n\n                                <span>Вернуться назад</span>\n                            </a>\n                            <div className=\"button pay-btn\">\n                                <span>Оплатить сейчас</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Cart;","import React, {FC} from 'react';\nimport './scss/app.scss';\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\nimport {Route} from \"react-router-dom\";\n\nconst App:FC = () => {\n\n    return (\n\n        <div className=\"wrapper\">\n            <Header/>\n            <div className=\"content\">\n                <Route path={'/'} component={Home} exact/>\n                <Route path={'/cart'} component={Cart} exact/>\n\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FiltersActionsType} from \"../actions/filters\";\n\n\nexport type initialStateType ={\n    category: string | number | null\n    sortBy: string\n}\n\nconst initialState: initialStateType = {\n    category: null,\n    sortBy: 'popular'\n}\n\nexport default function  filters (state: initialStateType = initialState, action: FiltersActionsType): initialStateType  {\n    switch (action.type){\n        case  'SET_SORT_BY':\n        return {\n            ...state, sortBy: action.payload\n        };\n        case   'SET_CATEGORY':\n        return {\n            ...state, category: action.payload\n        };\n    }\n\n    return state\n}","import {itemsType, PizzasActionsType} from \"../actions/pizzas\";\n\ntype initialStateType ={\n    items: [] | itemsType\n    isLoaded: boolean\n}\n\nconst initialState: initialStateType = {\n    items: [],\n    isLoaded: false\n}\n\nexport default function pizzas(state: initialStateType = initialState, action: PizzasActionsType): initialStateType {\n    switch (action.type) {\n        case  'SET_PIZZAS':\n            return {\n                ...state, items: action.payload,\n                isLoaded: true\n            };\n            case  'SET_LOADED':\n            return {\n                ...state, isLoaded: action.payload,\n\n            };\n        default:\n            return state;\n    }\n}","import { itemType} from \"../actions/pizzas\";\r\nimport {AddPizzaToCartActionType} from \"../actions/cart\";\r\n\r\nexport type newItemsType = {\r\n    id: number\r\n    item:  itemType\r\n}\r\n\r\ntype initialStateType = {\r\n    itemsCart: { [key: string] : Array<newItemsType> }\r\n    totalPrice: number\r\n    totalCount: number\r\n}\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    itemsCart: {},\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n\r\n\r\n\r\nexport default function cart(state: initialStateType = initialState, action: AddPizzaToCartActionType): initialStateType {\r\n    switch (action.type) {\r\n        case  'ADD_PIZZA_CART':\r\n            const newItems = {\r\n                    ...state.itemsCart,\r\n                    [action.payload.id]: (!state.itemsCart[action.payload.id]\r\n                        ? [action.payload]\r\n                        : [...state.itemsCart[action.payload.id], action.payload]),\r\n                };\r\n\r\n            const allPizzas = [].concat.apply([], Object.values(newItems));\r\n\r\n            const totalPrice = allPizzas.reduce((sum: number, obj: any) => {\r\n                return  obj.price + sum\r\n            }, 0);\r\n\r\n            return {\r\n                ...state,\r\n                itemsCart: newItems,\r\n                totalCount: allPizzas.length,\r\n                totalPrice: totalPrice\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport filters from \"./reducers/filters\";\nimport pizzas from \"./reducers/pizzas\";\nimport cart from \"./reducers/cart\";\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {PizzasActionsType} from \"./actions/pizzas\";\nimport {FiltersActionsType} from \"./actions/filters\";\nimport {AddPizzaToCartActionType} from \"./actions/cart\";\n\nconst rootReducer = combineReducers({\n    filters, pizzas, cart\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n//\n export type AppRootStateType = ReturnType<typeof rootReducer>\n//\nexport type AppActionType =\n    PizzasActionsType | FiltersActionsType | AddPizzaToCartActionType\n\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\n    AppRootStateType,\n    unknown,\n    AppActionType>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}